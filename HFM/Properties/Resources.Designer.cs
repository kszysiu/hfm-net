//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HFM.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HFM.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap About {
            get {
                object obj = ResourceManager.GetObject("About", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap aboutBox {
            get {
                object obj = ResourceManager.GetObject("aboutBox", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HelpContents {
            get {
                object obj = ResourceManager.GetObject("HelpContents", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name contains invalid characters..
        /// </summary>
        internal static string HostFileNameInvalidChars {
            get {
                return ResourceManager.GetString("HostFileNameInvalidChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTP path should be the full path{0}to the folder containing the{0}FAHlog.txt and unitinfo.txt{0}files (including the trailing /)..
        /// </summary>
        internal static string HostFtpPathInvalidTooltip {
            get {
                return ResourceManager.GetString("HostFtpPathInvalidTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTP server must be a valid{0}host name or IP address..
        /// </summary>
        internal static string HostFtpServerInvalidTooltip {
            get {
                return ResourceManager.GetString("HostFtpServerInvalidTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL must be a valid URL and be{0}the path to the folder containing{0}the FAHlog.txt and unitinfo.txt files..
        /// </summary>
        internal static string HostHttpUrlInvalidTooltip {
            get {
                return ResourceManager.GetString("HostHttpUrlInvalidTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Folder must be a valid local{0}or network (UNC) path..
        /// </summary>
        internal static string HostLocalPathInvalidTooltip {
            get {
                return ResourceManager.GetString("HostLocalPathInvalidTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance name can contain only letters, numbers,{0}and basic symbols (+=-_$&amp;^.[]). It must be at{0}least three characters long and must not begin or{0}end with a dot (.) or a space..
        /// </summary>
        internal static string HostNameToolTip {
            get {
                return ResourceManager.GetString("HostNameToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Processor Megahertz must be greater than zero..
        /// </summary>
        internal static string HostProcessorMhzGreaterThanZero {
            get {
                return ResourceManager.GetString("HostProcessorMhzGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Processor Megahertz must be numeric..
        /// </summary>
        internal static string HostProcessorMhzNumeric {
            get {
                return ResourceManager.GetString("HostProcessorMhzNumeric", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Maximize {
            get {
                object obj = ResourceManager.GetObject("Maximize", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Minimize {
            get {
                object obj = ResourceManager.GetObject("Minimize", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap New {
            get {
                object obj = ResourceManager.GetObject("New", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Open {
            get {
                object obj = ResourceManager.GetObject("Open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred while attempting to show {0}..
        /// </summary>
        internal static string ProcessStartError {
            get {
                return ResourceManager.GetString("ProcessStartError", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Quit {
            get {
                object obj = ResourceManager.GetObject("Quit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Restore {
            get {
                object obj = ResourceManager.GetObject("Restore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveAs {
            get {
                object obj = ResourceManager.GetObject("SaveAs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
